{
    "version":"0.2.0",
    "main-template":"#include <cstdio.h>\nchar a[30000] = {0};\nchar *ptr[10]={a, a, a, a, a, a, a, a, a, a};\nint main(){\n$\n    return(0);\n}",
    "tokens":[
        {
            "s":"\"",
            "i":"=",
            "d":"print",
            "c":"putchar(*$);"
        },
        {
            "s":"?",
            "i":"=",
            "d":"read",
            "c":"*$=getchar();"
        },
        {
            "s":"[",
            "i":"+",
            "d":"loop while > 0",
            "c":"while ($) {"
        },
        {
            "s":"]",
            "i":"-",
            "d":"end loop",
            "c":"}"
        },
        {
            "s":";",
            "i":"=",
            "d":"end expression",
            "c":";"
        },
        {
            "s":"(",
            "i":"=",
            "d":"left paren",
            "c":"("
        },
        {
            "s":")",
            "i":"=",
            "d":"right paren",
            "c":")"
        },
        {
            "s":"=",
            "i":"=",
            "d":"set value",
            "c":" = $"
        },
        {
            "s":"&",
            "i":"=",
            "d":"bitwise and",
            "c":" & $"
        },
        {
            "s":"|",
            "i":"=",
            "d":"bitwise or",
            "c":" | $"
        },
        {
            "s":"^",
            "i":"=",
            "d":"XOR",
            "c":" ^ $"
        },
        {
            "s":"!",
            "i":"=",
            "d":"bitwise not",
            "c":" ~$"
        },
        {
            "s":"%",
            "i":"=",
            "d":"modulous",
            "c":" % $"
        },
        {
            "s":"*",
            "i":"=",
            "d":"multiply",
            "c":" * $"
        },
        {
            "s":"/",
            "i":"=",
            "d":"divide",
            "c":" / $"
        },
        {
            "s":"+",
            "i":"=",
            "d":"add",
            "c":" + $"
        },
        {
            "s":"-",
            "i":"=",
            "d":"subtract",
            "c":" - $"
        },
        {
            "s":">",
            "i":"=",
            "d":"increment",
            "c":"++$;"
        },
        {
            "s":"<",
            "i":"=",
            "d":"decrement",
            "c":"--$;"
        },
        {
            "s":"@",
            "i":"=",
            "d":"Value at head",
            "c":"*$"
        },
        {
            "s":"0",
            "i":"=",
            "d":"head 0",
            "c":"ptr[0]"
        },
        {
            "s":"1",
            "i":"=",
            "d":"head 1",
            "c":"ptr[1]"
        },
        {
            "s":"2",
            "i":"=",
            "d":"head 2",
            "c":"ptr[2]"
        },
        {
            "s":"3",
            "i":"=",
            "d":"head 3",
            "c":"ptr[3]"
        },
        {
            "s":"4",
            "i":"=",
            "d":"head 4",
            "c":"ptr[4]"
        },
        {
            "s":"5",
            "i":"=",
            "d":"head 5",
            "c":"ptr[5]"
        },
        {
            "s":"6",
            "i":"=",
            "d":"head 6",
            "c":"ptr[6]"
        },
        {
            "s":"7",
            "i":"=",
            "d":"head 7",
            "c":"ptr[7]"
        },
        {
            "s":"8",
            "i":"=",
            "d":"head 8",
            "c":"ptr[8]"
        },
        {
            "s":"9",
            "i":"=",
            "d":"head 9",
            "c":"ptr[9]"
        },
        {
            "s":".",
            "i":"=",
            "d":"origin",
            "c":"a"
        },
        {
            "s":"\n",
            "i":"=",
            "d":"new line",
            "c":"\n"
        }
    ]
}